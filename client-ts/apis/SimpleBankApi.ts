/* tslint:disable */
/* eslint-disable */
/**
 * Simple Bank API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: dotu30257@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PbCreateUserRequest,
  PbCreateUserResponse,
  PbLoginUserRequest,
  PbLoginUserResponse,
  PbUpdateUserRequest,
  PbUpdateUserResponse,
  PbVerifyEmailResponse,
  RpcStatus,
} from '../models/index';
import {
    PbCreateUserRequestFromJSON,
    PbCreateUserRequestToJSON,
    PbCreateUserResponseFromJSON,
    PbCreateUserResponseToJSON,
    PbLoginUserRequestFromJSON,
    PbLoginUserRequestToJSON,
    PbLoginUserResponseFromJSON,
    PbLoginUserResponseToJSON,
    PbUpdateUserRequestFromJSON,
    PbUpdateUserRequestToJSON,
    PbUpdateUserResponseFromJSON,
    PbUpdateUserResponseToJSON,
    PbVerifyEmailResponseFromJSON,
    PbVerifyEmailResponseToJSON,
    RpcStatusFromJSON,
    RpcStatusToJSON,
} from '../models/index';

export interface SimpleBankCreateUserRequest {
    body: PbCreateUserRequest;
}

export interface SimpleBankLoginUserRequest {
    body: PbLoginUserRequest;
}

export interface SimpleBankUpdateUserRequest {
    body: PbUpdateUserRequest;
}

export interface SimpleBankVerifyEmailRequest {
    emailId?: string;
    secretCode?: string;
}

/**
 * 
 */
export class SimpleBankApi extends runtime.BaseAPI {

    /**
     * Use this API to create a new user
     * Create new user
     */
    async simpleBankCreateUserRaw(requestParameters: SimpleBankCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PbCreateUserResponse>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling simpleBankCreateUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/create_user`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PbCreateUserRequestToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PbCreateUserResponseFromJSON(jsonValue));
    }

    /**
     * Use this API to create a new user
     * Create new user
     */
    async simpleBankCreateUser(requestParameters: SimpleBankCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PbCreateUserResponse> {
        const response = await this.simpleBankCreateUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Use this API to login user
     * Login user
     */
    async simpleBankLoginUserRaw(requestParameters: SimpleBankLoginUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PbLoginUserResponse>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling simpleBankLoginUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/login_user`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PbLoginUserRequestToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PbLoginUserResponseFromJSON(jsonValue));
    }

    /**
     * Use this API to login user
     * Login user
     */
    async simpleBankLoginUser(requestParameters: SimpleBankLoginUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PbLoginUserResponse> {
        const response = await this.simpleBankLoginUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Use this API to update user
     * Update user
     */
    async simpleBankUpdateUserRaw(requestParameters: SimpleBankUpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PbUpdateUserResponse>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling simpleBankUpdateUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/update_user`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: PbUpdateUserRequestToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PbUpdateUserResponseFromJSON(jsonValue));
    }

    /**
     * Use this API to update user
     * Update user
     */
    async simpleBankUpdateUser(requestParameters: SimpleBankUpdateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PbUpdateUserResponse> {
        const response = await this.simpleBankUpdateUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Use this API to verify email
     * verify email
     */
    async simpleBankVerifyEmailRaw(requestParameters: SimpleBankVerifyEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PbVerifyEmailResponse>> {
        const queryParameters: any = {};

        if (requestParameters['emailId'] != null) {
            queryParameters['emailId'] = requestParameters['emailId'];
        }

        if (requestParameters['secretCode'] != null) {
            queryParameters['secretCode'] = requestParameters['secretCode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/verify_email`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PbVerifyEmailResponseFromJSON(jsonValue));
    }

    /**
     * Use this API to verify email
     * verify email
     */
    async simpleBankVerifyEmail(requestParameters: SimpleBankVerifyEmailRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PbVerifyEmailResponse> {
        const response = await this.simpleBankVerifyEmailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
